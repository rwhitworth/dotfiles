# .bashrc.local
# add to bash via:
# echo 'if [ -e ~/.bashrc.local ] ; then source ~/.bashrc.local ; fi' >> ~/.bashrc


if [[ -e /etc/redhat-release ]]
then
	export _RHVERSION=$(grep 'release' /etc/redhat-release | sed 's/[A-Za-z\ ()]//g' | cut -f 1 -d.)
else
	export _RHVERSION=0
fi

export _CYGWIN=$(uname -a | grep Cygwin | wc -l)


if [[ $_RHVERSION -eq 7 ]]
then
	# CentOS 7 'w' command no longer shows IP addresses by default.. so fix it
	alias w='w -f'
fi

alias smoke='perl -MCPAN::Reporter::Smoker -e start'

# bash history items borrowed from https://github.com/fotinakis/bashrc/blob/master/init.sh
# Eternal bash history.
# ---------------------
# Undocumented feature which sets the size to "unlimited".
# http://stackoverflow.com/questions/9457233/unlimited-bash-history
export HISTFILESIZE=
export HISTSIZE=
export HISTTIMEFORMAT="[%F %T] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
export HISTFILE=~/.bash_eternal_history
#
# ---------------------
# Additional items borrowed from https://github.com/mavcunha/bash/blob/master/scripts/history
#
# Ignore 'clear', 'bg', 'fg', 'exit', and any command with a --help commandline
export HISTIGNORE="clear:bg:fg:exit:* --help"
# force history to flush after every command, so no history is lost
export PROMPT_COMMAND='history -a'
shopt -s histappend # always append to history
hf(){
 history | grep ${1:-"."} | tail -r -n 1000 | selecta | eval $(awk '{ $1=""; print $0 }')
}
histfreq() {
  history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head -n 15
}

#################### Shell completion functions
# set completes with set options
complete -A setopt set
# shopt completes with shopt options
complete -A shopt shopt
# other job commands
complete -j -P '"%' -S '"' fg jobs
####################

# misc aliases and functions
# ---------------------
tm () {
  tmux attach || tmux 
}
alias e='date +"%s"'
alias ls='ls -la'
alias sl='ls'


# Returns the first element in a list.
#     first_in_list (a b c)
#     > a
function first_in_list {
	local list=("$@")
	echo ${list[0]}
}

# Returns the last element in a list.
#     last_in_list (a b c)
#     > c
function last_in_list {
	local list=("$@")
	local count=${#list[@]}
	echo ${list[ (( $count -1 )) ]}
}




#unset _RHVERSION
#unset _CYGWIN
